import numpy as np

def read_and_generate(filename):
    file=open(filename)
    size = file.readline()
    size = int(size)
    matrix_a = [[] for _ in range(size)]
    # pentru a numara elementele nenule de pe fiecare linie
    non_zeros = [0 for i in range(0, size)]
    for line in file:
        line = line.rstrip('\n')
        nums = line.split(', ')
        if nums[0] != '':
            value = float(nums[0])
            line = int(nums[1])
            column = int(nums[2])
            same_position = True
            for it in range(len(matrix_a[line])):
                if matrix_a[line][it][1] == column:
                    matrix_a[line][it][0] += value
                    same_position = False
                    break
            if same_position:
                matrix_a[line].append([value, column])
                non_zeros[line] += 1

            #sortam dupa coloana
            matrix_a[line].sort(key=lambda row: row[1])
    return matrix_a

def diag(matrix, eps):
    for i in range(len(matrix)):
        diag = 0
        for j in range(len(matrix[i])):
            if i == matrix[i][j][1]:
                diag = 1
        if diag == 0:
            return False
    return True

def norm(x, y):
    if len(x) != len(y):
        return
    return np.linalg.norm(x- y)

def gauss(A, b, eps):
    k = 0
    xc = xp = np.zeros(len(b))
    while True:
        k += 1
        xp = xc
        for i, line in enumerate(A):
            first_sum = 0
            second_sum = 0
            aii = None
            for element in line:
                j = element[1]
                value = element[0]
                if i == j:
                    aii = value
                elif j < i:
                    first_sum += value * xp[j]
                else:
                    second_sum += value * xp[j]
            xc[i] = (b[i] - first_sum - second_sum) / aii
        dx = norm(xc,xp)
        return dx


